{"version":3,"sources":["./src/app/Componetes/login/login.component.ts","./src/app/Componetes/login/login.component.html","./src/app/Servicos/auth/auth.service.ts","./src/app/Componetes/rodape/rodape.component.ts","./src/app/Componetes/rodape/rodape.component.html","./src/environments/environment.ts","./src/app/Componetes/home/home.component.ts","./src/app/Componetes/home/home.component.html","./src/app/Componetes/configurar-jogo-memoria/configurar-jogo-memoria.component.ts","./src/app/Componetes/configurar-jogo-memoria/configurar-jogo-memoria.component.html","./src/app/Componetes/jogo/jogo.component.ts","./src/app/Componetes/jogo/jogo.component.html","./src/app/Models/Carta.ts","./src/app/Componetes/menu/menu.component.ts","./src/app/Componetes/menu/menu.component.html","./src/app/Models/Questao.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Models/Jogo.ts","./src/app/Componetes/turmas/turmas.component.ts","./src/app/Componetes/turmas/turmas.component.html","./src/app/app.module.ts","./src/app/Componetes/cadastro/cadastro.component.ts","./src/app/Componetes/cadastro/cadastro.component.html","./src/app/Componetes/admin/admin.component.ts","./src/app/Componetes/admin/admin.component.html","./src/app/Servicos/carta/carta.service.ts","./src/app/Componetes/visualizacao-jogo-memoria/visualizacao-jogo-memoria.component.ts","./src/app/Componetes/visualizacao-jogo-memoria/visualizacao-jogo-memoria.component.html","./src/app/Componetes/menu-admin/menu-admin.component.ts","./src/app/Componetes/menu-admin/menu-admin.component.html","./src/app/Models/Jogador.ts","./src/app/Servicos/jogos/jogos.service.ts","./src/app/Componetes/subcomponents/pick-list/pick-list.component.ts","./src/app/Componetes/subcomponents/pick-list/pick-list.component.html","./src/app/Componetes/validar-email/validar-email.component.ts","./src/app/Componetes/validar-email/validar-email.component.html","./src/app/Componetes/iniciar-jogo-memoria/iniciar-jogo-memoria.component.ts","./src/app/Componetes/iniciar-jogo-memoria/iniciar-jogo-memoria.component.html","./src/app/Componetes/jogo-memoria/jogo-memoria.component.ts","./src/app/Componetes/jogo-memoria/jogo-memoria.component.html","./src/app/app-routing.module.ts","./src/app/Componetes/fim-jogo-memoria/fim-jogo-memoria.component.ts","./src/app/Componetes/fim-jogo-memoria/fim-jogo-memoria.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  email: string = \"\";\r\n  senha: string = \"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  irParaCadastro(){\r\n    this.router.navigate([\"cadastro\"]);\r\n  } \r\n  login(){\r\n    this.authService.SignIn(this.email, this.senha);\r\n  }\r\n}\r\n","<p-card [style]=\"{'width': '25rem','margin': 'auto', 'text-align': 'center'}\" class=\"center\">\r\n    <ng-template pTemplate=\"header\">\r\n        <br>\r\n        <b>\r\n            <h2>\r\n                Login\r\n            </h2>\r\n        </b>\r\n    </ng-template>\r\n\r\n    <span class=\"p-float-label\">\r\n        <input id=\"email-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"email\" type=\"text\" pInputText> \r\n        <label for=\"email-input\">Email</label>\r\n    </span>\r\n    <br>    \r\n    <span class=\"p-float-label\">\r\n        <input id=\"senha-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"senha\" [feedback]=false type=\"password\" pPassword> \r\n        <label for=\"senha-input\">Senha</label>\r\n    </span>\r\n    <br>\r\n    <button pButton type=\"button\" label=\"Login\" (click)=\"login()\"  [style]=\"{'width': '100%'}\" ></button>\r\n    <br>\r\n    <br>\r\n    <button pButton type=\"button\" label=\"Login com Google\" icon=\"pi pi-google\" class=\"p-button-outlined p-button-rounded p-button-info\" (click)=\"authService.GoogleAuth()\" [style]=\"{'width': '100%'}\" ></button>\r\n    <br>\r\n    <br>\r\n    <button pButton type=\"button\" label=\"Cadastrar\" class=\"p-button-outlined p-button-primary\" (click)=\"irParaCadastro()\" [style]=\"{'width': '100%'}\" ></button>\r\n</p-card>\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport * as firebase from 'firebase/app';\r\nimport { AngularFireAuth } from \"@angular/fire/auth\";\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  userData: any;// Save logged in user data\r\n  userReady = false;\r\n  constructor(public afs: AngularFirestore,\r\n              public afAuth: AngularFireAuth,\r\n              private router: Router,  \r\n              private ngZone: NgZone) {\r\n    /* Saving user data in localstorage when \r\n    logged in and setting up null when logged out */\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        this.userData.admin = false;\r\n        if(this.userData.uid == \"LeUa9ybfQugsWBvitnKAg4Wau0X2\"){\r\n          this.userData.admin = true;\r\n        }\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user')!);\r\n      } else {\r\n        localStorage.setItem('user', '{}');\r\n        JSON.parse(localStorage.getItem('user')!);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Sign in with email/password\r\n  SignIn(email: string, password: string) {\r\n    return this.afAuth.signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['']);\r\n        });\r\n        this.userData = result.user;\r\n\r\n        let user_cache = JSON.parse(localStorage.getItem('user')!);\r\n        user_cache.emailVerified = result.user?.emailVerified;\r\n        localStorage.setItem('user', JSON.stringify(user_cache));\r\n        this.userReady = true;\r\n\r\n       \r\n        this.userData.admin = false;\r\n        if(this.userData.uid == \"LeUa9ybfQugsWBvitnKAg4Wau0X2\"){\r\n          this.userData.admin = true;\r\n        }\r\n\r\n      }).catch((error) => {\r\n        window.alert(error.message)\r\n      })\r\n  }\r\n  // Sign up with email/password\r\n  SignUp(email: string, password: string, nome: string) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        /* Call the SendVerificaitonMail() function when new user sign \r\n        up and returns promise */\r\n        this.userReady = true;\r\n        this.SendVerificationMail();\r\n        this.SetUserData(result.user, nome);\r\n      }).catch((error) => {\r\n        window.alert(error.message);\r\n      })\r\n  }\r\n\r\n  // Send email verfificaiton when new user sign up\r\n  SendVerificationMail() {\r\n    return this.afAuth.currentUser.then(u =>{if(u != undefined)u.sendEmailVerification()})\r\n    .then(() => {\r\n      this.router.navigate(['validar-email']);\r\n    });\r\n  }\r\n\r\n  // Reset Forggot password\r\n  ForgotPassword(passwordResetEmail: string) {\r\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\r\n    .then(() => {\r\n      window.alert('Enviamos um email para a troca da senha para o endereço solicitado');\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  // Returns true when user is looged in and email is verified\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user')!);\r\n    //console.log(1, user !== null);\r\n    //console.log(2, user.emailVerified !== false);\r\n    //console.log(3, user.emailVerified !== undefined);\r\n    //console.log(4, user !== undefined);\r\n    return (user !== null && user.emailVerified !== false && user.emailVerified !== undefined && user !== undefined) ? true : false;\r\n  }\r\n\r\n  // Sign in with Google\r\n  GoogleAuth() {\r\n    return this.AuthLogin(new firebase.default.auth.GoogleAuthProvider());\r\n  }\r\n\r\n  // Auth logic to run auth providers\r\n  AuthLogin(provider: any) {\r\n    return this.afAuth.signInWithPopup(provider)\r\n    .then((result) => {\r\n      this.ngZone.run(() => {\r\n          this.router.navigate(['']);\r\n      })\r\n      this.userReady = true;\r\n      this.SetUserData(result.user, '');\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  /* Setting up user data when sign in with username/password, \r\n  sign up with username/password and sign in with social auth  \r\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\r\n  SetUserData(user: any, nome: string) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`Users/${user.uid}`);\r\n\r\n    const userData = {\r\n      id: user.uid,\r\n      email: user.email,\r\n      nome: user.displayName,\r\n      email_verificado: user.emailVerified,\r\n    }\r\n\r\n    if(nome != ''){\r\n      userData.nome = nome;\r\n    }\r\n    userRef.set(userData, {\r\n      merge: true\r\n    }).then(() =>{\r\n      \r\n    }).catch((e)=>{\r\n      console.error(\"Falha ao Criar Aluno, Favor Contatar Suporte\",e);\r\n    })\r\n\r\n  }\r\n\r\n  // Sign out \r\n  SignOut() {\r\n    return this.afAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.userData = null;\r\n      localStorage.clear();\r\n      this.userReady = false;\r\n      this.router.navigate(['login']);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rodape',\r\n  templateUrl: './rodape.component.html',\r\n  styleUrls: ['./rodape.component.css']\r\n})\r\nexport class RodapeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p-card class=\"footer\">\r\n    <p style=\"text-align: center;\" >\r\n        Versão 0.5 alpha <br> <br>\r\n        Equipe de Desenvolvimento <br>\r\n        Matheus de Carvalho <br>\r\n    </p>\r\n</p-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseconfig:{\r\n    apiKey: \"AIzaSyDP4PI-jYkt8DOgncxUqO6hDqyqkWLu2tk\",\r\n    authDomain: \"sistema-seguranca-trabalho.firebaseapp.com\",\r\n    projectId: \"sistema-seguranca-trabalho\",\r\n    storageBucket: \"sistema-seguranca-trabalho.appspot.com\",\r\n    messagingSenderId: \"1057029791819\",\r\n    appId: \"1:1057029791819:web:c477761a85e5f8128f2dce\",\r\n    measurementId: \"G-QJH1CTRT39\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { timer } from 'rxjs';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, \r\n              private router: Router) {\r\n\r\n   }\r\n  userReady = false;\r\n  ngOnInit(): void {\r\n    // if(!this.authService.userData && !this.authService.userReady){ \r\n    //   this.router.navigate([\"login\"]);\r\n    // }else{\r\n    //   let time = timer(200, 1000).subscribe(() =>{\r\n    //     if(this.authService.userData != undefined){\r\n    //       this.userReady = true;\r\n    //       time.unsubscribe();\r\n    //     }\r\n    //   });\r\n    //   let time2 = timer(200, 1000).subscribe(() =>{\r\n    //     if(this.userReady){\r\n    //       if(this.authService.userData.admin !=undefined){\r\n    //         time2.unsubscribe();\r\n    //         if(this.authService.userData.admin){\r\n    //           this.router.navigate(['admin']);\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n}\r\n","<app-menu></app-menu>\r\n<div class=\"wrapper\" >\r\n\r\n</div>\r\n<app-rodape></app-rodape>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { timer } from 'rxjs';\r\nimport { Carta } from 'src/app/Models/Carta';\r\nimport { Jogo } from 'src/app/Models/Jogo';\r\nimport { JogosService } from 'src/app/Servicos/jogos/jogos.service';\r\n\r\n@Component({\r\n  selector: 'app-configurar-jogo-memoria',\r\n  templateUrl: './configurar-jogo-memoria.component.html',\r\n  styleUrls: ['./configurar-jogo-memoria.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class ConfigurarJogoMemoriaComponent implements OnInit {\r\n\r\n  @ViewChild('pick_list') pick_list: any;\r\n\r\n  editMode = false;\r\n  titleText = 'Criar Jogo da Memória';\r\n  buttonText = 'Criar';\r\n  titulo = '';\r\n\r\n  tempo_inicio = 240;\r\n  tempo_max = 310;\r\n  quantidade_tentativas = 24;\r\n  prioridade_tempo = 50;\r\n  mostrar_cartas_antes = false;\r\n\r\n  peso_tempo_inicio = 2;\r\n  peso_tempo_max = 4;\r\n  peso_quantidade_tentativas = 3;\r\n  peso_mostrar_cartas_antes = 1;\r\n\r\n  quantidade_cartas = 8;\r\n\r\n  dificuldade = 0;\r\n\r\n  tituloInvalido = false;\r\n  viewJogo = false;\r\n  loading = false;\r\n  idJogo = '';\r\n  id_visualizar = '';\r\n  baseURL = window.location.origin;\r\n\r\n  placehooders: any[] = [];\r\n  timerPlaceholders: any;\r\n\r\n  constructor(\r\n    private jogosService: JogosService,\r\n    private messageService: MessageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.editMode){\r\n      this.titleText = 'Editar Jogo da Memória';\r\n      this.buttonText = 'Editar';\r\n    }\r\n    this.calcularDificuldade();\r\n\r\n    this.timerPlaceholders = timer(500, 1500).subscribe(() => {\r\n      this.placehooders = Array(this.quantidade_cartas).fill(0);\r\n    });\r\n  }\r\n\r\n  ativar(){\r\n    if(this.editMode){\r\n      this.editar();\r\n    }else{\r\n      this.criar();\r\n    }\r\n  }\r\n\r\n  criar(){\r\n    console.log(\"pick_list\", this.getCartasSelecionadas(this.pick_list.cartasSelecionadas));\r\n    if(this.verificarCamposObrigatorios()){\r\n      this.viewJogo = true;\r\n      this.loading = true;\r\n      this.id_visualizar = this.jogosService.gerarUID();\r\n      this.jogosService.criarJogo(\r\n        new Jogo(\r\n          this.titulo,\r\n          this.tempo_inicio,\r\n          this.tempo_max,\r\n          this.quantidade_tentativas,\r\n          this.prioridade_tempo,\r\n          this.mostrar_cartas_antes,\r\n          this.getCartasSelecionadas(this.pick_list.cartasSelecionadas),\r\n          this.quantidade_cartas\r\n          ),\r\n        this.id_visualizar\r\n      ).subscribe((observer: any) => {\r\n        this.loading = false;\r\n        this.idJogo = observer;\r\n      });\r\n    }else{\r\n      this.tituloInvalido = true;\r\n      this.messageService.add({severity:'error', summary:'Erro', detail:'Preencha todos os campos obrigatórios!'});\r\n    }\r\n  }\r\n\r\n  editar(){\r\n  }\r\n\r\n  getCartasSelecionadas(cartas: Carta[]){\r\n    return cartas.map(carta => carta.conteudo);\r\n  }\r\n\r\n  selecionarCartas(pick_list: any){\r\n    console.log(pick_list.cartasSelecionadas)\r\n  }\r\n\r\n  verificarCamposObrigatorios(){\r\n    this.titulo = this.titulo.replace(/\\s+/g, ' ').trim();\r\n    if(this.titulo == '' || this.titulo == ' '){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  copiarLink(){\r\n    const val = this.baseURL + '/jogo-memoria?id=' + this.idJogo;\r\n    const selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = val;\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n  }\r\n\r\n  copiarLinkVisualizar(){\r\n    const val = this.baseURL + '/jogo-memoria?id=' + this.idJogo + '&list=' + this.id_visualizar;\r\n    const selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = val;\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n  }\r\n\r\n\r\n  mudarTitulo(){\r\n    this.titulo = this.titulo.replace(/\\s+/g, ' ').trim();\r\n    if(this.titulo == '' || this.titulo == ' '){\r\n      this.tituloInvalido = true;\r\n    }else{\r\n      this.tituloInvalido = false;\r\n    }\r\n  }\r\n\r\n  mudarTempoMax(){\r\n    if(this.tempo_inicio > this.tempo_max){\r\n      this.tempo_inicio = this.tempo_max;\r\n    }\r\n    this.calcularDificuldade();\r\n  }\r\n\r\n  mudarQuantidadeTentativas(){\r\n    this.calcularDificuldade();\r\n  }\r\n\r\n  mudarTempoInicio(){\r\n    this.calcularDificuldade();\r\n  }\r\n\r\n  mudarMostrarCartasAntes(){\r\n    this.calcularDificuldade();\r\n  }\r\n\r\n  calcularDificuldade(){\r\n\r\n    let dificuldade_tempo_max = (1 - ((this.tempo_max - 20)/580)) * this.peso_tempo_max;\r\n    let dificuldade_tempo_inicio = (1 - (this.tempo_inicio/this.tempo_max)) * this.peso_tempo_inicio;\r\n    let dificuldade_quantidade_tentativas = (1 - ((this.quantidade_tentativas - 1)/49)) * this.peso_quantidade_tentativas;\r\n    let dificuldade_mostrar_cartas_antes;\r\n\r\n    if(this.mostrar_cartas_antes){\r\n      dificuldade_mostrar_cartas_antes = 0 * this.peso_mostrar_cartas_antes;\r\n    }else{\r\n      dificuldade_mostrar_cartas_antes = 1 * this.peso_mostrar_cartas_antes;\r\n    }\r\n\r\n    let media_dificuldade = (dificuldade_tempo_max + dificuldade_tempo_inicio + dificuldade_quantidade_tentativas + dificuldade_mostrar_cartas_antes)/10;\r\n\r\n    this.dificuldade = Math.round(media_dificuldade * 100);\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <h1 style=\"text-align: center;\">\r\n            {{titleText}}\r\n        </h1>\r\n    </div>\r\n</div>\r\n<p-tabView>\r\n    <p-tabPanel header=\"Configurações\">\r\n        <div class=\"p-grid\" *ngIf=\"!viewJogo\">\r\n            \r\n            <div class=\"p-col-12\">\r\n                <span class=\"p-float-label\">\r\n                    <input [style]=\"{'width': '100%'}\" id=\"float-input\" type=\"text\" [(ngModel)]=\"titulo\" pInputText *ngIf=\"!tituloInvalido\" (input)=\"mudarTitulo()\"> \r\n                    <input [style]=\"{'width': '100%'}\" id=\"float-input\" type=\"text\" [(ngModel)]=\"titulo\" pInputText class=\"ng-invalid ng-dirty\" *ngIf=\"tituloInvalido\" (input)=\"mudarTitulo()\"> \r\n                    <label for=\"float-input\">Título do Jogo</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-col-12\">\r\n                <div class=\"p-grid\">\r\n                    <!-- Opções de Quantidade de questões -->\r\n                    <div class=\"p-col-6\">\r\n                        <div>\r\n                            <i>\r\n                                Selecione o quantas tentativas o jogador terá antes de começar a perder pontos\r\n                            </i>\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"p-col-12 linhaSlider\">\r\n                            <div class=\"p-grid\">\r\n                                <div class=\"p-col-12\">\r\n                                    <p-slider [(ngModel)]=\"quantidade_tentativas\" [min]=\"1\" [max]=\"50\" (onChange)=\"mudarQuantidadeTentativas()\"></p-slider>\r\n                                </div>\r\n                                <div class=\"p-col-12\">\r\n                                    <strong>\r\n                                        Quantidade de tentativas: {{quantidade_tentativas}}\r\n                                    </strong>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                        <div>\r\n                            <i>\r\n                                Selecione a prioridade para calculo do resultado em porcentagem entre quantidade de tentativas e tempo\r\n                            </i>\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"p-col-12 linhaSlider\">\r\n                            <div class=\"p-grid\">\r\n                                <div class=\"p-col-12\">\r\n                                    <p-slider [(ngModel)]=\"prioridade_tempo\" [min]=\"0\" [max]=\"100\" [step]=\"10\"></p-slider>\r\n                                </div>\r\n                                <div class=\"p-col-6\">\r\n                                    <strong>\r\n                                        Tentativas({{100-prioridade_tempo}}%)\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"p-col-6\">\r\n                                    <strong style=\"float: right;\">\r\n                                        Tempo({{prioridade_tempo}}%)\r\n                                    </strong>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <!-- Opções de tempo -->\r\n                    <div class=\"p-col-6\">\r\n                        <div>\r\n                            <i>\r\n                                Selecione o tempo que o jogador terá antes de começar a perder pontos(Em segundos)\r\n                            </i>\r\n                        </div>\r\n                        <div class=\"p-col-12\">\r\n                            <div class=\"p-d-flex p-jc-center\">\r\n                                <p-knob [(ngModel)]=\"tempo_inicio\" [size]=\"100\" [min]=\"0\" [max]=\"tempo_max\" [step]=\"10\" valueTemplate=\"{value} s\" (onChange)=\"mudarTempoInicio()\"></p-knob>\r\n                            </div>\r\n                        </div>    \r\n                        <div>\r\n                            <i>\r\n                                Selecione o tempo máximo para o jogo(Em segundos)\r\n                            </i>\r\n                        </div>\r\n                        <div class=\"p-col-12\">\r\n                            <div class=\"p-d-flex p-jc-center\">\r\n                                <p-knob [(ngModel)]=\"tempo_max\" [size]=\"100\" [min]=\"20\" [max]=\"600\" [step]=\"10\" valueTemplate=\"{value} s\" (onChange)=\"mudarTempoMax()\"></p-knob>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-col-6\">\r\n                Mostrar as cartas rápidamente antes de iniciar?\r\n            </div>\r\n            <div class=\"p-col-6\">\r\n                <div class=\"p-d-flex p-jc-center\">\r\n                    <p-inputSwitch [(ngModel)]=\"mostrar_cartas_antes\" (onChange)=\"mudarMostrarCartasAntes()\"></p-inputSwitch>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <div class=\"p-col-12\">\r\n                Dificuldade\r\n            </div>\r\n            <div class=\"p-col-12\">\r\n                <p-progressBar [value]=\"dificuldade\"></p-progressBar>\r\n            </div>\r\n            <div class=\"p-col-12\">\r\n                <button pButton type=\"button\" class=\"p-button-info\" (click)=\"ativar()\" [label]=\"buttonText\" [style]=\"{'width': '100%'}\"></button>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-grid p-formgrid\" *ngIf=\"viewJogo\">\r\n            <div class=\"p-field p-col-12 p-md-6\" style=\"margin: auto;\" *ngIf=\"loading\">\r\n                <div class=\"p-grid\">\r\n                    <div class=\"p-col-12\">\r\n                        <p-skeleton height=\"2.5rem\" styleClass=\"p-mb-2\"></p-skeleton>\r\n                    </div>\r\n                    <div class=\"p-col-12\">\r\n                        <p-skeleton styleClass=\"p-mb-2\" ></p-skeleton>\r\n                    </div>\r\n                    <div class=\"p-col-8\">\r\n                        <p-skeleton height=\"3rem\" styleClass=\"p-mb-2\"></p-skeleton>\r\n                    </div>\r\n                    <div class=\"p-col-4\">\r\n                        <p-skeleton height=\"3rem\" styleClass=\"p-mb-2\"></p-skeleton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-grid p-col-12\" *ngIf=\"!loading\">\r\n                <div class=\"p-col-12\">\r\n                    <h1 style=\"text-align: center;\">\r\n                        {{titulo}} foi criado com sucesso!\r\n                    </h1>\r\n                </div>\r\n                <div class=\"p-col-12\">\r\n                    <h3 style=\"text-align: center;\">\r\n                        Agora você pode enviar o jogo para as pessoas que vão resolver utilizando o link abaixo!\r\n                    </h3>\r\n                </div>\r\n                <div class=\"p-col-8\">\r\n                    <a href=\"/jogo-memoria?id={{idJogo}}\">\r\n                        <div class=\"p-card\" style=\"text-align: center; width: 100%;\">\r\n                            <h3 class=\"link\">\r\n                                {{baseURL}}/jogo-memoria?id={{idJogo}}\r\n                            </h3>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div class=\"p-col-4\">\r\n                    <button pButton type=\"button\" class=\"p-button-info\" (click)=\"copiarLink()\" label=\"Copiar\" [style]=\"{'width': '100%', 'height': '100%'}\"></button>\r\n                </div>\r\n                <div class=\"p-col-12\">\r\n                    <h3 style=\"text-align: center;\">\r\n                        Guarde o link abaixo ele será utilizado para visualizar os resultados do seu jogo!\r\n                    </h3>\r\n                </div>\r\n                <div class=\"p-col-8\">\r\n                    <a href=\"/jogo-memoria?id={{idJogo}}&list={{id_visualizar}}\">\r\n                        <div class=\"p-card\" style=\"text-align: center; width: 100%;\">\r\n                            <h3 class=\"link2\">\r\n                                {{baseURL}}/jogo-memoria?id={{idJogo}}&list={{id_visualizar}}\r\n                            </h3>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div class=\"p-col-4\">\r\n                    <button pButton type=\"button\" class=\"p-button-info\" (click)=\"copiarLinkVisualizar()\" label=\"Copiar\" [style]=\"{'width': '100%', 'height': '100%'}\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </p-tabPanel>\r\n    <p-tabPanel header=\"Selecionar Cartas\">\r\n        <div class=\"p-grid\">\r\n            <div class=\"p-col-4\"></div>\r\n            <div class=\"p-col-4\" style=\"text-align: center;\">\r\n                Quantidade de cartas: <span class=\"texto-primario\">(total: {{quantidade_cartas}})</span> <span class=\"texto-selecionado\">(selecionadas: {{pick_list.cartasSelecionadas.length*2}})</span> <span class=\"texto-excluido\">(aleatórias: {{quantidade_cartas - (pick_list.cartasSelecionadas.length)*2}})</span>\r\n            </div>\r\n            <div class=\"p-col-4\"></div>\r\n            <div class=\"p-col-4\"></div>\r\n            <div class=\"p-col-4\">\r\n                <strong>\r\n                    <p-slider [(ngModel)]=\"quantidade_cartas\" [min]=\"8\" [max]=\"16\" [step]=\"2\" (onChange)=\"mudarQuantidadeTentativas()\"></p-slider>\r\n                </strong>\r\n            </div>\r\n            <div class=\"p-col-4\"></div>\r\n            <div class=\"p-col-12\">\r\n                <app-pick-list #pick_list [quantidadeTotal]=\"quantidade_cartas\"></app-pick-list>\r\n            </div>\r\n        </div>\r\n    </p-tabPanel>\r\n    <p-tabPanel header=\"Pre-visualizar\">\r\n        <div class=\"cartas-container\">\r\n            <div class=\"carta\" *ngFor=\"let placehooder of placehooders; let i = index\">\r\n                <div class=\"box box-stretched carta-virada\"> </div>\r\n            </div>\r\n        </div>\r\n    </p-tabPanel>\r\n</p-tabView>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { timer } from 'rxjs';\r\nimport { Questao } from 'src/app/Models/Questao';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-jogo',\r\n  templateUrl: './jogo.component.html',\r\n  styleUrls: ['./jogo.component.css']\r\n})\r\nexport class JogoComponent implements OnInit {\r\n\r\n  questoes: Questao[] = [];\r\n\r\n  questoesExistentes: string[] = [];\r\n\r\n    constructor(private authService: AuthService, \r\n      private router: Router) {\r\n\r\n  }\r\n userReady = false;\r\n  ngOnInit(): void {\r\n    /* if(!this.authService.userData && !this.authService.userReady){ \r\n      this.router.navigate([\"login\"]);\r\n    }else{\r\n      let time = timer(200, 1000).subscribe(() =>{\r\n        if(this.authService.userData != undefined){\r\n          this.userReady = true;\r\n          time.unsubscribe();\r\n        }\r\n      });\r\n      let time2 = timer(200, 1000).subscribe(() =>{\r\n        if(this.userReady){\r\n          if(this.authService.userData.admin !=undefined){\r\n              time2.unsubscribe();\r\n            if(this.authService.userData.admin){\r\n              this.router.navigate(['admin']);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }*/\r\n    for (let index = 0; index < 10; index++) {\r\n      let questao = new Questao(this.questoesExistentes);\r\n      this.questoes.push(questao);\r\n      this.questoesExistentes.push(questao.id);\r\n    }\r\n  }\r\n  checarResposta(index: number, questao: Questao){\r\n    questao.indexEscolhido = index;\r\n  }\r\n}\r\n\r\n","<app-menu></app-menu>\r\n<div class=\"wrapper\" >\r\n\r\n</div>\r\n<div class=\"card\">\r\n    <h2 style=\"color:white\">Atividade Avaliativa</h2>\r\n    <p-tabView>\r\n        <p-tabPanel [header]=\"i+1+''\"  *ngFor=\"let item of questoes; let i = index\">\r\n            <h3>Qual o Significado Desta Placa?</h3>\r\n           \r\n            \r\n            <div class=\"p-d-flex p-jc-center\">\r\n                <img [src]=\"item.imagem\">\r\n            </div>\r\n            \r\n            <br>\r\n            <div [style]=\"{'width': '100%'}\">\r\n                <div  *ngFor=\"let resposta of item.respostas; let i = index\">\r\n                    <button pButton type=\"button\" *ngIf=\"item.indexEscolhido == i\" class=\"p-button-info\" (click)=\"checarResposta(i, item)\" [label]=\"resposta\" [style]=\"{'width': '100%','height': '20%'}\"></button>\r\n                    <button pButton type=\"button\" *ngIf=\"item.indexEscolhido != i\" (click)=\"checarResposta(i, item)\" [label]=\"resposta\" [style]=\"{'width': '100%','height': '20%'}\"></button>\r\n                    \r\n                </div>\r\n                <br>\r\n            </div>\r\n\r\n        </p-tabPanel>\r\n        <p-tabPanel header=\"Submeter\">\r\n            <p-card>\r\n                <h3 style=\"text-align: center;\">\r\n                    Clique no Botão Abaixo Para Submeter\r\n                </h3>\r\n                <br>\r\n                <div class=\"p-d-flex p-jc-center\">\r\n                    <button pButton type=\"button\" label=\"Submeter\" class=\"p-button-warning\"></button>\r\n                </div>\r\n            </p-card>\r\n        </p-tabPanel>\r\n    </p-tabView>\r\n    \r\n</div>\r\n\r\n<app-rodape></app-rodape>","export class Carta{\r\n    \r\n    id = \"\";\r\n    tipo = \"\";\r\n    conteudo = \"\";\r\n    isSelecionada = false;\r\n    isCorreto = false;\r\n\r\n    // placas: string[] = [\r\n    //     \"001\",\r\n    //     \"002\",\r\n    //     \"003\",\r\n    //     \"004\",\r\n    //     \"005\",\r\n    //     \"006\",\r\n    //     \"007\",\r\n    //     \"008\",\r\n    //     \"009\",\r\n    //     \"010\",\r\n    //     \"011\",\r\n    //     \"012\",\r\n    //     \"013\",\r\n    //     \"014\",\r\n    //     \"015\",\r\n    //     \"016\",\r\n    //     \"017\",\r\n    //     \"018\",\r\n    //     \"019\"\r\n    // ];\r\n\r\n    // placasNomes: string[] = [\r\n    //     \"Alta Temperatura\",\r\n    //     \"Alta Voltagem\",\r\n    //     \"Atmosfera Explosiva\",\r\n    //     \"Campo Eletromagnetico\",\r\n    //     \"Forte Campo Magnético\",\r\n    //     \"Material Radioativo\",\r\n    //     \"Raio Laser\",\r\n    //     \"Substâncias Comburante\",\r\n    //     \"Substâncias Explosivas\",\r\n    //     \"Substâncias Toxicas\",\r\n    //     \"Veiculo de Movimenta Carga\",\r\n    //     \"Carga suspensa\",\r\n    //     \"Perigo de tropeçamento\",\r\n    //     \"Risco biológico\",\r\n    //     \"Risco de queda em desnivelamento\",\r\n    //     \"Substância nociva\",\r\n    //     \"Substâncias corrosivas\",\r\n    //     \"Temperatura baixa\",\r\n    //     \"Vários perigos\"\r\n    // ];\r\n    \r\n    // constructor(cartasExistentes: Carta[]){\r\n    //     if (cartasExistentes.length == 0) {\r\n    //         this.getNovaCarta(cartasExistentes);\r\n    //     }else if (cartasExistentes[cartasExistentes.length-1].tipo == \"texto\") {\r\n    //         this.getNovaCarta(cartasExistentes);\r\n    //     }else{\r\n    //         this.getCartaTexto(cartasExistentes);\r\n    //     }\r\n    // }\r\n\r\n    // private getNovaCarta(cartasExistentes: Carta[]){\r\n    //     this.tipo = \"imagem\";\r\n        \r\n    //     this.id = this.placas[this.getRandomInt(0, this.placas.length)];\r\n    //     this.conteudo = \"/assets/Placas/\"+this.id+\".jpg\";\r\n\r\n    //     if (this.cartaExiste(cartasExistentes)) {\r\n            \r\n    //         this.conteudo = \"\";\r\n    //         this.id = \"\";\r\n    //         this.getNovaCarta(cartasExistentes);\r\n    //     }\r\n    // }\r\n\r\n    // private getCartaTexto(cartasExistentes: Carta[]){\r\n    //     this.tipo = \"texto\";\r\n    //     this.id = cartasExistentes[cartasExistentes.length-1].id;\r\n    //     this.conteudo = this.placasNomes[this.placas.indexOf(this.id)];\r\n    // }\r\n\r\n    // private cartaExiste(cartasExistentes: Carta[]){\r\n    //     let existe = false;\r\n\r\n    //     for (let i = 0; i < cartasExistentes.length; i++) {\r\n    //         if (cartasExistentes[i].id == this.id) {\r\n    //             existe = true;\r\n    //         }\r\n    //     }\r\n    //     return existe;\r\n    // }\r\n\r\n    // private getRandomInt(min: number, max: number) {\r\n    //     min = Math.ceil(min);\r\n    //     max = Math.floor(max);\r\n    //     return Math.floor(Math.random() * (max - min)) + min;\r\n    // }\r\n\r\n    \r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {MenuItem} from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\nimport { ConfigurarJogoMemoriaComponent } from '../configurar-jogo-memoria/configurar-jogo-memoria.component';\r\nimport { VisualizacaoJogoMemoriaComponent } from '../visualizacao-jogo-memoria/visualizacao-jogo-memoria.component';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css'],\r\n  providers: [DialogService]\r\n})\r\n\r\nexport class MenuComponent implements OnInit {\r\n  items: MenuItem[] = [];\r\n  constructor(\r\n    public authService: AuthService, private router: Router,\r\n    public dialogService: DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      {\r\n        label: 'Criar jogo',\r\n        icon: 'pi pi-plus-circle',\r\n        command: (event) => {\r\n          this.mostraResultado();\r\n        }\r\n      },\r\n      {\r\n        label: 'Visualizar meus jogos',\r\n        icon: 'pi pi-users',\r\n        command: (event) => {\r\n          this.mostraJogos();\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  private mostraResultado() {\r\n    const ref = this.dialogService.open(ConfigurarJogoMemoriaComponent, {\r\n      header: '',\r\n      width: '70%',\r\n      closable: true,\r\n    });\r\n  }\r\n\r\n  private mostraJogos() {\r\n    const ref = this.dialogService.open(VisualizacaoJogoMemoriaComponent, {\r\n      header: '',\r\n      width: '50%',\r\n      closable: true,\r\n    });\r\n  }\r\n}","<p-menubar [model]=\"items\">\r\n    <ng-template pTemplate=\"start\">\r\n        <a routerLink=\"/\" routerLinkActive=\"active\" >\r\n            <img src=\"https://firebasestorage.googleapis.com/v0/b/sistema-seguranca-trabalho.appspot.com/o/logotipo300x300.png?alt=media&token=dd94a5b7-61cd-4f2c-9283-c2b27d968d1d\" height=\"40\" class=\"p-mr-2\">\r\n        </a>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"end\">\r\n        <p-button label =\"Sair\" (click)=\"authService.SignOut()\" ></p-button>\r\n    </ng-template>\r\n</p-menubar>\r\n","export class Questao{\r\n    imagem: string = \"\"; \r\n    respostas: string[] = [];\r\n    resposta: string = \"\";\r\n    indexCorreto = 0;\r\n    indexEscolhido = -1;\r\n    id = \"000\";\r\n\r\n    placas: string[] = [\r\n        \"001\",\r\n        \"002\",\r\n        \"003\",\r\n        \"004\",\r\n        \"005\",\r\n        \"006\",\r\n        \"007\",\r\n        \"008\",\r\n        \"009\",\r\n        \"010\",\r\n        \"011\",\r\n    ];\r\n\r\n    placasNomes: string[] = [\r\n        \"Alta Temperatura\",\r\n        \"Alta Voltagem\",\r\n        \"Atmosfera Explosiva\",\r\n        \"Campo Eletromagnetico\",\r\n        \"Forte Campo Magnético\",\r\n        \"Material Radioativo\",\r\n        \"Raio Laser\",\r\n        \"Substâncias Comburante\",\r\n        \"Substâncias Explosivas\",\r\n        \"Substâncias Toxicas\",\r\n        \"Veiculo de Movimenta Carga\"\r\n    ];\r\n\r\n    constructor(questoesExistentes: string[]){\r\n        this.escolherPlaca(questoesExistentes);\r\n        this.gerarRespostas();\r\n    }\r\n\r\n    private escolherPlaca(questoesExistentes: string[]){\r\n        this.resposta = this.placasNomes[this.getRandomInt(0, this.placasNomes.length)];\r\n        this.id = this.placas[this.placasNomes.indexOf(this.resposta)];\r\n        this.imagem = \"/assets/Placas/\"+this.id+\".jpg\";\r\n\r\n        if (questoesExistentes.indexOf(this.id) != -1) {\r\n            this.resposta = \"\";\r\n            this.imagem = \"\";\r\n            this.escolherPlaca(questoesExistentes);\r\n        }\r\n    }\r\n\r\n    private gerarRespostas(){\r\n        let respostaCertaColocada = false;\r\n        for(let i = 0; i<5;i++){\r\n            let chance = this.getRandomInt(0, 5);\r\n            if (i == 4 && !respostaCertaColocada) {\r\n                this.respostas[i] = this.resposta; \r\n                this.indexCorreto = i;\r\n            }else if (chance == 0 && !respostaCertaColocada) {\r\n                respostaCertaColocada = true;\r\n                this.respostas[i] = this.resposta;\r\n                this.indexCorreto = i;\r\n            }else{\r\n                this.respostas[i] = this.getRespostaErrada();\r\n            } \r\n        }\r\n    }\r\n\r\n    private getRespostaErrada(){\r\n        let respostaAtual = \"\";\r\n        while (true) {\r\n            if (this.respostas.indexOf(respostaAtual) == -1 && respostaAtual != \"\" && respostaAtual != this.resposta) {\r\n                return respostaAtual;\r\n            }else{ \r\n                respostaAtual = this.placasNomes[this.getRandomInt(0, this.placasNomes.length)];\r\n            }\r\n        }\r\n    }\r\n    private getRandomInt(min: number, max: number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class AppComponent {\r\n  title = 'Sistema-Seguranca-Trabalho';\r\n\r\n  constructor(private messageService: MessageService) { }\r\n}\r\n","<router-outlet></router-outlet>","import { Jogador } from \"./Jogador\";\r\n\r\nexport class Jogo{\r\n    private titulo: string = '';\r\n    private tempo_inicio: number = 240;\r\n    private tempo_max: number = 310;\r\n    private quantidade_tentativas: number = 10;\r\n    private prioridade_tempo: number = 50;\r\n    private mostrar_cartas_antes: boolean = false;\r\n    private cartas_selecionadas: string[] = [];\r\n    private quantidade_cartas: number = 0;\r\n    private jogadores: Jogador[] = [];\r\n    \r\n    public constructor(\r\n        titulo: string,\r\n        tempo_inicio: number,\r\n        tempo_max: number,\r\n        quantidade_tentativas: number,\r\n        prioridade_tempo: number,\r\n        mostrar_cartas_antes: boolean,\r\n        cartas_selecionadas: string[],\r\n        quantidade_cartas: number\r\n    ){\r\n        this.titulo = titulo;\r\n        this.tempo_inicio = tempo_inicio;\r\n        this.tempo_max = tempo_max;\r\n        this.quantidade_tentativas = quantidade_tentativas;\r\n        this.prioridade_tempo = prioridade_tempo;\r\n        this.mostrar_cartas_antes = mostrar_cartas_antes;\r\n        this.cartas_selecionadas = cartas_selecionadas;\r\n        this.quantidade_cartas = quantidade_cartas;\r\n        this.jogadores = [];\r\n    }\r\n\r\n    public getTitulo(): string{\r\n        return this.titulo;\r\n    }\r\n\r\n    public getTempoInicio(): number{\r\n        return this.tempo_inicio;\r\n    }\r\n\r\n    public getTempoMax(): number{\r\n        return this.tempo_max;\r\n    }\r\n\r\n    public getQuantidadeTentativas(): number{\r\n        return this.quantidade_tentativas;\r\n    }\r\n\r\n    public getPrioridadeTempo(): number{\r\n        return this.prioridade_tempo;\r\n    }\r\n\r\n    public getMostrarCartasAntes(): boolean{\r\n        return this.mostrar_cartas_antes;\r\n    }\r\n\r\n    public getJogadores(): Jogador[]{\r\n        return this.jogadores;\r\n    }\r\n\r\n    public setTitulo(titulo: string){\r\n        this.titulo = titulo;\r\n    }\r\n\r\n    public setTempoInicio(tempo_inicio: number){\r\n        this.tempo_inicio = tempo_inicio;\r\n    }\r\n\r\n    public setTempoMax(tempo_max: number){\r\n        this.tempo_max = tempo_max;\r\n    }\r\n\r\n    public setQuantidadeTentativas(quantidade_tentativas: number){\r\n        this.quantidade_tentativas = quantidade_tentativas;\r\n    }\r\n\r\n    public setPrioridadeTempo(prioridade_tempo: number){\r\n        this.prioridade_tempo = prioridade_tempo;\r\n    }\r\n\r\n    public setMostrarCartasAntes(mostrar_cartas_antes: boolean){\r\n        this.mostrar_cartas_antes = mostrar_cartas_antes;\r\n    }\r\n\r\n    public setJogadores(jogadores: []){\r\n        this.jogadores = jogadores;\r\n    }\r\n\r\n    public getQuantidadeCartas(): number{\r\n        return this.quantidade_cartas;\r\n    }\r\n\r\n    public setQuantidadeCartas(quantidade_cartas: number){\r\n        this.quantidade_cartas = quantidade_cartas;\r\n    }\r\n\r\n    public getCartasSelecionada(){\r\n        return this.cartas_selecionadas;\r\n    }\r\n\r\n    public setCartasSelecionada(cartas_selecionadas: string[]){\r\n        this.cartas_selecionadas = cartas_selecionadas;\r\n    }\r\n\r\n    public addJogador(jogador: Jogador){\r\n        this.jogadores.push(jogador);\r\n    }\r\n\r\n    public removeJogador(jogador: Jogador){\r\n        this.jogadores.splice(this.jogadores.indexOf(jogador), 1);\r\n    }\r\n\r\n    public getJogador(index: number){\r\n        return this.jogadores[index];\r\n    }\r\n\r\n    public getPontuacao(tempo: number, tentativas: number): number{\r\n        let pontuacao = 10;\r\n        if(tempo > this.tempo_inicio){\r\n            const tempo_ultrapassado = tempo - this.tempo_inicio;\r\n            console.log(\"tempo_ultrapassado\", tempo_ultrapassado);\r\n            const tempo_ultrapassado_porcentagem = tempo_ultrapassado / (this.tempo_max - this.tempo_inicio);\r\n            console.log(\"tempo_ultrapassado_porcentagem\", tempo_ultrapassado_porcentagem);\r\n            const prioridade_tempo_porcentagem = this.prioridade_tempo / 100;\r\n            console.log(\"prioridade_tempo_porcentagem\", prioridade_tempo_porcentagem);\r\n            pontuacao = pontuacao - (tempo_ultrapassado_porcentagem * 10) * prioridade_tempo_porcentagem;\r\n            console.log(\"pontuacao\", pontuacao);\r\n        }\r\n        if(tentativas > this.quantidade_tentativas){\r\n            const tentativas_excedidas = tentativas - this.quantidade_tentativas;\r\n            console.log(\"tentativas_excedidas\", tentativas_excedidas);\r\n            const prioridade_tentativas_porcentagem = (100 - this.prioridade_tempo) / 100;\r\n            console.log(\"prioridade_tentativas_porcentagem\", prioridade_tentativas_porcentagem);\r\n            let pontuacao_tentativas = pontuacao * prioridade_tentativas_porcentagem;\r\n            console.log(\"pontuacao_tentativas\", pontuacao_tentativas);\r\n            const pontuacao_perdida_tentativas = Math.min( 0.25 * tentativas_excedidas, pontuacao_tentativas);\r\n            console.log(\"pontuacao_perdida_tentativas\", pontuacao_perdida_tentativas);\r\n            pontuacao = pontuacao - pontuacao_perdida_tentativas;\r\n        }\r\n        return parseFloat(pontuacao.toFixed(2));\r\n\r\n    }\r\n\r\n    public toString(): string{\r\n        return \"Jogo: \" + this.titulo + \" | Tempo Inicio: \" + this.tempo_inicio + \" | Tempo Max: \" + this.tempo_max + \" | Quantidade Tentativas: \" + this.quantidade_tentativas + \" | Prioridade Tempo: \" + this.prioridade_tempo + \" | Mostrar Cartas Antes: \" + this.mostrar_cartas_antes;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-turmas',\r\n  templateUrl: './turmas.component.html',\r\n  styleUrls: ['./turmas.component.css']\r\n})\r\nexport class TurmasComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p></p>\r\n","//Modulos do Angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//Modulos do Firebase\r\nimport { AngularFireModule } from '@angular/fire' ;\r\nimport { environment } from 'src/environments/environment';\r\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\r\n\r\n//Modolos do Primeng\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {CardModule} from 'primeng/card';\r\nimport {PasswordModule} from 'primeng/password';\r\nimport {MenubarModule} from 'primeng/menubar';\r\nimport {TabViewModule} from 'primeng/tabview';\r\nimport {DividerModule} from 'primeng/divider';\r\nimport {SplitterModule} from 'primeng/splitter';\r\nimport {DynamicDialogModule} from 'primeng/dynamicdialog';\r\nimport {KnobModule} from 'primeng/knob';\r\nimport {SkeletonModule} from 'primeng/skeleton';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {InputSwitchModule} from 'primeng/inputswitch';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\nimport {ToastModule} from 'primeng/toast';\r\n\r\n//Componetes do Sistema\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './Componetes/login/login.component';\r\nimport { CadastroComponent } from './Componetes/cadastro/cadastro.component';\r\nimport { ValidarEmailComponent } from './Componetes/validar-email/validar-email.component';\r\nimport { MenuComponent } from './Componetes/menu/menu.component';\r\nimport { HomeComponent } from './Componetes/home/home.component';\r\nimport { RodapeComponent } from './Componetes/rodape/rodape.component';\r\nimport { AdminComponent } from './Componetes/admin/admin.component';\r\nimport { MenuAdminComponent } from './Componetes/menu-admin/menu-admin.component';\r\nimport { TurmasComponent } from './Componetes/turmas/turmas.component';\r\nimport { JogoComponent } from './Componetes/jogo/jogo.component';\r\nimport { JogoMemoriaComponent } from './Componetes/jogo-memoria/jogo-memoria.component';\r\nimport { FimJogoMemoriaComponent } from './Componetes/fim-jogo-memoria/fim-jogo-memoria.component';\r\nimport { IniciarJogoMemoriaComponent } from './Componetes/iniciar-jogo-memoria/iniciar-jogo-memoria.component';\r\nimport { ConfigurarJogoMemoriaComponent } from './Componetes/configurar-jogo-memoria/configurar-jogo-memoria.component';\r\nimport { VisualizacaoJogoMemoriaComponent } from './Componetes/visualizacao-jogo-memoria/visualizacao-jogo-memoria.component';\r\nimport { PickListComponent } from './Componetes/subcomponents/pick-list/pick-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'cadastro', component: CadastroComponent},\r\n  {path: '', component: HomeComponent},\r\n  {path: 'admin', component: AdminComponent},\r\n  {path: 'validar-email', component: ValidarEmailComponent},\r\n  {path: 'atividade', component: JogoComponent},\r\n  {path: 'jogo-memoria', component: JogoMemoriaComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    CadastroComponent,\r\n    ValidarEmailComponent,\r\n    MenuComponent,\r\n    HomeComponent,\r\n    RodapeComponent,\r\n    AdminComponent,\r\n    MenuAdminComponent,\r\n    TurmasComponent,\r\n    JogoComponent,\r\n    JogoMemoriaComponent,\r\n    FimJogoMemoriaComponent,\r\n    IniciarJogoMemoriaComponent,\r\n    ConfigurarJogoMemoriaComponent,\r\n    VisualizacaoJogoMemoriaComponent,\r\n    PickListComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(routes),\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebaseconfig),\r\n    AngularFireAuthModule,\r\n    BrowserAnimationsModule,\r\n    \r\n    ButtonModule,\r\n    InputTextModule,\r\n    CardModule,\r\n    PasswordModule,\r\n    MenubarModule,\r\n    TabViewModule,\r\n    DividerModule,\r\n    SplitterModule,\r\n    DynamicDialogModule,\r\n    KnobModule,\r\n    SkeletonModule,\r\n    SliderModule,\r\n    InputSwitchModule,\r\n    ProgressBarModule,\r\n    ToastModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    FimJogoMemoriaComponent,\r\n    IniciarJogoMemoriaComponent,\r\n    ConfigurarJogoMemoriaComponent,\r\n    VisualizacaoJogoMemoriaComponent,\r\n]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.css']\r\n})\r\nexport class CadastroComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n  nome: string = \"\";\r\n  email: string = \"\";\r\n\r\n  senha: string = \"\";\r\n  re_senha: string = \"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  cadastrar(){\r\n    if(this.senha == this.re_senha){\r\n      this.authService.SignUp(this.email, this.senha, this.nome);\r\n    }\r\n  }\r\n}\r\n","<p-card [style]=\"{'width': '25rem', 'margin-bottom': '2em', 'margin': '0 auto', 'text-align': 'center'}\" class=\"center\">\r\n    <ng-template pTemplate=\"header\">\r\n        <br>\r\n        <b>\r\n            <h2>\r\n                Cadastro\r\n            </h2>\r\n        </b>\r\n    </ng-template>\r\n    <span class=\"p-float-label\">\r\n        <input id=\"nome-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"nome\" type=\"text\" pInputText> \r\n        <label for=\"nome-input\">Nome</label>\r\n    </span>\r\n    <br>\r\n    <span class=\"p-float-label\">\r\n        <input id=\"email-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"email\" type=\"text\" pInputText> \r\n        <label for=\"email-input\">Email</label>\r\n    </span>\r\n    <br>    \r\n    <span class=\"p-float-label\">\r\n        <input id=\"senha-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"senha\" type=\"password\" pPassword> \r\n        <label for=\"senha-input\">Senha</label>\r\n    </span>\r\n    <br>\r\n    <span class=\"p-float-label\">\r\n        <input id=\"re-senha-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"re_senha\" [feedback]=false type=\"password\" pPassword> \r\n        <label for=\"re-senha-input\">Repetir Senha</label>\r\n    </span>\r\n    <br>\r\n    <button pButton type=\"button\" label=\"Cadastrar\" (click)=\"cadastrar()\" [style]=\"{'width': '100%'}\" ></button>\r\n    <br>\r\n    <br>\r\n    <button pButton type=\"button\" label=\"Cadastrar com Google\" icon=\"pi pi-google\" class=\"p-button-outlined p-button-rounded p-button-info\" (click)=\"authService.GoogleAuth()\" [style]=\"{'width': '100%'}\" ></button>\r\n    <br>\r\n    <br>\r\n    <a routerLink=\"/login\" routerLinkActive=\"active\" >Voltar Para Login</a>\r\n\r\n</p-card>\r\n","import { unescapeIdentifier } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { timer } from 'rxjs';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  userReady = false;\r\n\r\n  ngOnInit(): void {\r\n    if(!this.authService.userData && !this.authService.userReady){ \r\n        this.router.navigate([\"login\"]);\r\n    }else{\r\n      let time = timer(200, 1000).subscribe(() =>{\r\n        if(this.authService.userData != undefined){\r\n          this.userReady = true;\r\n          time.unsubscribe();\r\n        }\r\n      });\r\n      let time2 = timer(200, 1000).subscribe(() =>{\r\n        if(this.userReady){\r\n          if(this.authService.userData.admin !=undefined){\r\n            time2.unsubscribe();\r\n            if(!this.authService.userData.admin){\r\n              this.router.navigate(['']);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<app-menu-admin></app-menu-admin>","import { Injectable } from '@angular/core';\nimport { Carta } from 'src/app/Models/Carta';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartaService {\n\n  cartasNomes: string[] = [\n    \"Alta Temperatura\",\n    \"Alta Voltagem\",\n    \"Atmosfera Explosiva\",\n    \"Campo Eletromagnetico\",\n    \"Forte Campo Magnético\",\n    \"Material Radioativo\",\n    \"Raio Laser\",\n    \"Substâncias Comburante\",\n    \"Substâncias Explosivas\",\n    \"Substâncias Toxicas\",\n    \"Veiculo de Movimenta Carga\",\n    \"Carga suspensa\",\n    \"Perigo de tropeçamento\",\n    \"Risco biológico\",\n    \"Risco de queda em desnivelamento\",\n    \"Substância nociva\",\n    \"Substâncias corrosivas\",\n    \"Temperatura baixa\",\n    \"Vários perigos\"\n  ];\n\n  constructor() { }\n\n  public getCartaPair(nome: string): any{\n    let cartas: Carta[] = [];\n\n    let carta: Carta = new Carta();\n    carta.conteudo = nome;\n    carta.tipo = \"texto\";\n    let index: string = this.cartasNomes.indexOf(nome)+\"\";\n    carta.id = index;\n    cartas.push(carta);\n\n    carta = new Carta();\n    carta.id = index;\n    const indexSrc = ((parseInt(index)+1)+\"\");\n    if(indexSrc.length == 1){\n      index = \"00\"+(parseInt(index)+1);\n    }else if(indexSrc.length == 2){\n      index = \"0\"+(parseInt(index)+1);\n    }\n    carta.conteudo = \"/assets/Placas/\"+index+\".jpg\";\n    carta.tipo = \"imagem\";\n    cartas.push(carta);\n\n    return cartas;\n  }\n\n  public getRandomCartaPair(): any{\n    let cartas: Carta[] = [];\n    let cartaIndex: number = this.getRandomInt(0, this.cartasNomes.length);\n    \n    let carta: Carta = new Carta();\n    carta.conteudo = this.cartasNomes[cartaIndex];\n    carta.tipo = \"texto\";\n    let index: string = cartaIndex+\"\";\n    carta.id = index;\n    cartas.push(carta);\n\n    carta = new Carta();\n    carta.id = index;\n    const indexSrc = ((parseInt(index)+1)+\"\");\n    if(indexSrc.length == 1){\n      index = \"00\"+(parseInt(index)+1);\n    }\n    else if(indexSrc.length == 2){\n      index = \"0\"+(parseInt(index)+1);\n    }\n    carta.conteudo = \"/assets/Placas/\"+index+\".jpg\";\n    carta.tipo = \"imagem\";\n    cartas.push(carta);\n\n    return cartas;\n  }\n\n  public getCartasLista(){\n\n    let cartasLista: Carta[] = [];\n\n    for (let i = 0; i < 19; i++) {\n        let carta = new Carta();\n        carta.tipo = \"texto\";\n        carta.conteudo = this.cartasNomes[i];\n        cartasLista.push(carta);\n    }\n\n    return cartasLista;\n  }\n\n  private getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { Jogo } from 'src/app/Models/Jogo';\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\nimport { JogosService } from 'src/app/Servicos/jogos/jogos.service';\n\n@Component({\n  selector: 'app-visualizacao-jogo-memoria',\n  templateUrl: './visualizacao-jogo-memoria.component.html',\n  styleUrls: ['./visualizacao-jogo-memoria.component.css']\n})\nexport class VisualizacaoJogoMemoriaComponent implements OnInit {\n\n  jogo: Jogo = new Jogo(\"\", 0, 0, 0, 0, false, [], 0);\n  jogadores: any[] = [];\n  jogos: any = [];\n\n  constructor(\n    public ref: DynamicDialogRef, \n    public config: DynamicDialogConfig,\n    private jogoService: JogosService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(this.config.data);\n    if(this.config.data){\n      this.jogo = this.config.data.jogo;\n      this.jogadores = this.jogo.getJogadores();\n    }else{\n      console.log(\"Não foi possível carregar o jogo\");\n      this.jogoService.getJogosDeUmUsuario(this.authService.userData.uid).subscribe(jogos => {\n        this.jogos = jogos;\n        console.log(\"jogos: \", this.jogos);\n      });\n    }\n  }\n\n  public iniciar(){\n    this.ref.close();\n  }\n}\n","<div class=\"p-grid\">\n    <div class=\"p-col-12\">\n        <h1 style=\"text-align: center;\" *ngIf=\"jogo.getTitulo() != ''\">\n            Lista de jogadores({{jogo.getTitulo()}})\n        </h1>\n        <h1 style=\"text-align: center;\" *ngIf=\"jogos.length != 0\">\n            Lista de jogos\n        </h1>\n    </div>\n    <span class=\"main-data\" *ngIf=\"jogo.getTitulo() != ''\">\n        <div class=\"p-col-12\" *ngFor=\"let jogador of jogadores; let i = index\">\n            <div class=\"data-row\">\n                <div class=\"data-name\">\n                    {{jogador.nome}}\n                </div>\n                <div class=\"data-points\">\n                    {{jogo.getPontuacao(jogador.tempo, jogador.tentativas)}}/10\n                </div>\n            </div>\n            <!-- <div class=\"p-grid\">\n                <div class=\"p-col-8\">\n                    {{jogador.nome}}\n                </div>\n                <div class=\"p-col-4\">\n                    {{jogo.getPontuacao(jogador.tempo, jogador.tentativas)}}/10\n                </div>\n            </div> -->\n        </div>\n    </span>\n    <span class=\"main-data\" *ngIf=\"jogos.length != 0\">\n        <div *ngFor=\"let jogo of jogos; let i = index\">\n            <div class=\"data-row\">\n                <div class=\"data-name\">\n                    {{jogo.jogo_nome}}\n                </div>\n                <div class=\"data-points\">\n                    {{jogo.pontuacao}}/10\n                </div>\n            </div>\n            <!-- <div class=\"p-grid\">\n                <div class=\"p-col-8\">\n                    {{jogo.jogo_nome}}\n                </div>\n                <div class=\"p-col-4\">\n                    {{jogo.pontuacao}}/10\n                </div>\n            </div> -->\n        </div>\n    </span>\n    \n    <div class=\"p-col-12\">\n        <button pButton type=\"button\" (click)=\"iniciar()\" [style]=\"{'width': '100%'}\" label=\"Fechar\" ></button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-admin',\r\n  templateUrl: './menu-admin.component.html',\r\n  styleUrls: ['./menu-admin.component.css']\r\n})\r\nexport class MenuAdminComponent implements OnInit {\r\n  items: MenuItem[] = [];\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      {\r\n          label: 'Turmas',\r\n          icon: 'pi pi-users'\r\n      },\r\n      {\r\n          label: 'Forum',\r\n          icon: 'pi pi-book'\r\n      },\r\n      {\r\n        label: 'Mural',\r\n        icon: 'pi pi-users'\r\n      },\r\n    ];\r\n  }\r\n}\r\n","<p-menubar [model]=\"items\">\r\n    <ng-template pTemplate=\"start\">\r\n        <a routerLink=\"/\" routerLinkActive=\"active\" >\r\n            <img src=\"https://firebasestorage.googleapis.com/v0/b/sistema-seguranca-trabalho.appspot.com/o/logotipo300x300.png?alt=media&token=dd94a5b7-61cd-4f2c-9283-c2b27d968d1d\" height=\"40\" class=\"p-mr-2\">\r\n        </a>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"end\">\r\n        <p-button label =\"Sair\" (click)=\"authService.SignOut()\" ></p-button>\r\n    </ng-template>\r\n</p-menubar>\r\n","export class Jogador{\r\n    private id: string = '';\r\n    private nome: string = '';\r\n    private tentativas: number = 0;\r\n    private tempo: number = 0;\r\n\r\n    public constructor(id: string, nome: string, tentativas: number, tempo: number){\r\n        this.id = id;\r\n        this.nome = nome;\r\n        this.tentativas = tentativas;\r\n        this.tempo = tempo;\r\n    }\r\n\r\n    public getId(): string{\r\n        return this.id;\r\n    }\r\n\r\n    public getNome(): string{\r\n        return this.nome;\r\n    }\r\n\r\n    public getTentativas(): number{\r\n        return this.tentativas;\r\n    }\r\n\r\n    public getTempo(): number{\r\n        return this.tempo;\r\n    }\r\n\r\n    public setId(id: string): void{\r\n        this.id = id;\r\n    }\r\n\r\n    public setNome(nome: string): void{\r\n        this.nome = nome;\r\n    }\r\n\r\n    public setTentativas(tentativas: number): void{\r\n        this.tentativas = tentativas;\r\n    }\r\n\r\n    public setTempo(tempo: number): void{\r\n        this.tempo = tempo;\r\n    }\r\n\r\n    public toString(): string{\r\n        return \"Nome: \" + this.nome + \" Tentativas: \" + this.tentativas + \" Tempo: \" + this.tempo;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { Jogo } from 'src/app/Models/Jogo';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JogosService {\r\n\r\n  constructor(public afs: AngularFirestore) {\r\n\r\n  }\r\n  public getJogo(id:string){\r\n    return new Observable(observer =>{\r\n      const jogoRef: AngularFirestoreDocument<any> = this.afs.doc(`Jogos/${id}`);\r\n      jogoRef.get().subscribe(valor =>{\r\n        observer.next(valor.data());\r\n      });\r\n    });\r\n  }\r\n\r\n  public getJogosDeUmUsuario(id: string){\r\n    return new Observable(observer =>{\r\n      const jogoRef = this.afs.collection('Jogos').get().subscribe(valor =>{\r\n        console.log(\"Query Snapshot: \", valor);\r\n        let jogos: any[] = [];\r\n        valor.forEach(function(doc) {\r\n          let jogo: any = doc.data();\r\n          let jogoO: Jogo = new Jogo(\r\n            jogo.title,\r\n            jogo.tempo_inicio,\r\n            jogo.tempo_max,\r\n            jogo.quantidade_tentativas,\r\n            jogo.prioridade_tempo,\r\n            jogo.mostrar_cartas_antes,\r\n            jogo.cartas_seleciodadas,\r\n            jogo.quantidade_cartas);\r\n          jogo.jogadores.forEach((jogador: any) =>{\r\n            if(jogador.id == id){\r\n              jogos.push({\r\n                jogo_nome: jogo.title,\r\n                pontuacao: jogoO.getPontuacao(jogador.tempo, jogador.tentativas)\r\n              });\r\n            }\r\n          });\r\n        });\r\n        observer.next(jogos);\r\n      });\r\n    });\r\n  }\r\n\r\n  public criarJogo(jogo: Jogo, id_visualizar: string){\r\n    return new Observable(observer =>{\r\n      this.afs.collection('Jogos').add({\r\n        id_visualizar: id_visualizar,\r\n        title: jogo.getTitulo(),\r\n        tempo_inicio: jogo.getTempoInicio(),\r\n        tempo_max: jogo.getTempoMax(),\r\n        quantidade_tentativas: jogo.getQuantidadeTentativas(),\r\n        prioridade_tempo: jogo.getPrioridadeTempo(),\r\n        mostrar_cartas_antes: jogo.getMostrarCartasAntes(),\r\n        jogadores: jogo.getJogadores(),\r\n        cartas_seleciodadas: jogo.getCartasSelecionada(),\r\n        quantidade_cartas: jogo.getQuantidadeCartas(),\r\n      }).then(function(docRef: any) {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n        observer.next(docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n    });\r\n  }\r\n\r\n  public adicionarJogador(id: string, jogador: any){\r\n    const novoJogador = {\r\n      id: jogador.getId(),\r\n      nome: jogador.getNome(),\r\n      tentativas: jogador.getTentativas(),\r\n      tempo: jogador.getTempo()\r\n    }\r\n    return new Observable(observer =>{\r\n      const jogoRef: AngularFirestoreDocument<any> = this.afs.doc(`Jogos/${id}`);\r\n      // let jogadores: any[] = [];\r\n      // jogoRef.get().subscribe(valor =>{\r\n      //   jogadores = valor.data().jogadores;\r\n      //   jogadores.push(novoJogador);\r\n      //   console.log(\"Jogadores: \", jogadores);\r\n      // });\r\n      jogoRef.update({\r\n        jogadores: firebase.default.firestore.FieldValue.arrayUnion(novoJogador)\r\n      }).then(function(docRef: any) {\r\n        observer.next(\"adicionado\");\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n    });\r\n  }\r\n\r\n  public jogadorExiste(id: string, jogador_id: any){\r\n    let existe = false;\r\n    return new Observable(observer =>{\r\n      const jogoRef: AngularFirestoreDocument<any> = this.afs.doc(`Jogos/${id}`);\r\n      let jogadores: any[] = [];\r\n      jogoRef.get().subscribe(valor =>{\r\n        jogadores = valor.data().jogadores;\r\n        for(let i = 0; i < jogadores.length; i++){\r\n          if(jogador_id == jogadores[i].id){\r\n            existe = true;\r\n          }\r\n        }\r\n        observer.next(existe);\r\n      });\r\n    });\r\n  }\r\n\r\n  public gerarUID(){\r\n    let uid = \"\";\r\n    let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for(let i = 0; i < 5; i++){\r\n      uid += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return uid;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Carta } from 'src/app/Models/Carta';\nimport { Output, EventEmitter } from '@angular/core'; \nimport { timer } from 'rxjs';\nimport { CartaService } from 'src/app/Servicos/carta/carta.service';\n\n@Component({\n  selector: 'app-pick-list',\n  templateUrl: './pick-list.component.html',\n  styleUrls: ['./pick-list.component.css']\n})\nexport class PickListComponent implements OnInit {\n\n  constructor(\n    private cartasService: CartaService\n  ) { }\n\n\n  @Input() quantidadeTotal: number = 0;\n  cartas: Carta[] = [];\n  cartasSelecionadas: Carta[] = [];\n  timerCheckInvalidCartas: any;\n\n  ngOnInit(): void {\n    this.cartas = this.cartasService.getCartasLista();\n\n    this.timerCheckInvalidCartas = timer(200, 1000).subscribe(()=> {\n      if(this.cartasSelecionadas.length > (this.quantidadeTotal/2)){\n        this.ajustarCartas();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.timerCheckInvalidCartas.unsubscribe();\n  }\n\n  adicionarSelecionada(carta: Carta){\n    if(this.cartasSelecionadas.length < (this.quantidadeTotal/2)){\n      this.cartasSelecionadas.push(carta);\n      this.cartas = this.cartas.filter(c => c.conteudo != carta.conteudo);\n    }\n  }\n\n  removerSelecionada(carta: Carta){\n    this.cartas.push(carta);\n    this.cartasSelecionadas = this.cartasSelecionadas.filter(c => c.conteudo != carta.conteudo);\n  }\n\n  ajustarCartas(){\n    for(let i = 0; i < Math.abs((this.quantidadeTotal/2) - this.cartasSelecionadas.length); i++){\n      this.cartas.push(this.cartasSelecionadas.pop()!);\n    }\n  }\n}\n","<div class=\"pickList\">\n    <div class=\"info\">Todas Cartas</div>\n    <div class=\"info\">Cartas Selecionadas</div>\n    <div class=\"dragSide container\">\n        <div class=\"item\" *ngFor=\"let item of cartas\" (click)=\"adicionarSelecionada(item)\">{{item.conteudo}}</div>\n    </div>\n    <div class=\"dropSide container\">\n        <div class=\"item\" *ngFor=\"let item of cartasSelecionadas\" (click)=\"removerSelecionada(item)\">{{item.conteudo}}</div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-validar-email',\r\n  templateUrl: './validar-email.component.html',\r\n  styleUrls: ['./validar-email.component.css']\r\n})\r\nexport class ValidarEmailComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p-card [style]=\"{'width': '25rem', 'margin-bottom': '2em', 'margin': '0 auto', 'text-align': 'center'}\">\r\n    <ng-template pTemplate=\"header\">\r\n        <br>\r\n        <b>\r\n            <h2>\r\n                Validar Email\r\n            </h2>\r\n        </b>\r\n    </ng-template>\r\n    <div *ngIf=\"authService.userData as user\">\r\n        <br>  \r\n        <p>\r\n            Agora que você realizou o cadastro em nosso sistema, Por favor valide seu email no endereço cadastrado abaixo.\r\n        </p>  \r\n        <br>\r\n        <br>\r\n        <button pButton type=\"button\" label=\"{{user.email}}\" class=\"p-button-outlined p-button-rounded p-button-info\" [style]=\"{'width': '100%'}\" ></button>\r\n        <br>\r\n        <br>\r\n        <p>\r\n            Caso não tenha recebido o email de validação, Clique no botão acima.\r\n        </p>\r\n    </div>\r\n</p-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { Jogo } from 'src/app/Models/Jogo';\r\n\r\n@Component({\r\n  selector: 'app-iniciar-jogo-memoria',\r\n  templateUrl: './iniciar-jogo-memoria.component.html',\r\n  styleUrls: ['./iniciar-jogo-memoria.component.css']\r\n})\r\nexport class IniciarJogoMemoriaComponent implements OnInit {\r\n\r\n  jogo: Jogo = new Jogo(\"\", 0, 0, 0, 0, false, [], 0);\r\n\r\n  constructor(\r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.jogo = this.config.data.jogo;\r\n  }\r\n\r\n  public iniciar(){\r\n    this.ref.close();\r\n  }\r\n\r\n  public formatarTempo(tempo: number){\r\n    let tempoFormatado = \"\";\r\n    let minutos = Math.floor(tempo /60);\r\n    let segundos = (tempo - Math.floor(tempo /60)*60);\r\n    if(minutos < 10) tempoFormatado += \"0\"+minutos;\r\n    else tempoFormatado += minutos;\r\n    tempoFormatado += \":\";\r\n    if(segundos < 10) tempoFormatado += \"0\"+segundos;\r\n    else  tempoFormatado += segundos;\r\n\r\n    return tempoFormatado;\r\n  }\r\n}\r\n","<div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <h1 style=\"text-align: center;\">\r\n            {{jogo.getTitulo()}}\r\n        </h1>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            Você poderá usar <span class=\"destaque\">{{jogo.getQuantidadeTentativas()}}</span> tentativas antes de começar a perder pontos.\r\n        </h2>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            Você terá <span class=\"destaque\">{{formatarTempo(jogo.getTempoMax())}}</span> minutos para finalizar o jogo.\r\n        </h2>\r\n        <h2 style=\"text-align: center;\">\r\n            Você começara a perder pontos a partir de <span class=\"destaque\">{{formatarTempo(jogo.getTempoMax() - jogo.getTempoInicio())}}</span> minutos no cronômetro.\r\n        </h2>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            O peso da pontuação será de <span class=\"destaque\">{{jogo.getPrioridadeTempo()}}%</span> para tempo.\r\n        </h2>\r\n        <h2 style=\"text-align: center;\">\r\n            E o peso da pontuação será de <span class=\"destaque\">{{100 - jogo.getPrioridadeTempo()}}%</span> para quantidade de tentativas.\r\n        </h2>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\" *ngIf=\"jogo.getMostrarCartasAntes()\">\r\n            As cartas <span class=\"destaque\">irão</span> iniciar viradas para cima.\r\n        </h2>\r\n        <h2 style=\"text-align: center;\" *ngIf=\"!jogo.getMostrarCartasAntes()\">\r\n            As cartas <span class=\"destaque\">não irão</span> iniciar viradas para cima.\r\n        </h2>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            <span class=\"destaque\">Clique no Botão Abaixo Para Iniciar o Jogo</span>\r\n        </h2>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <button pButton type=\"button\" (click)=\"iniciar()\" [style]=\"{'width': '100%'}\" label=\"Iniciar\" ></button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Carta } from 'src/app/Models/Carta';\r\nimport { timer } from 'rxjs';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { FimJogoMemoriaComponent } from '../fim-jogo-memoria/fim-jogo-memoria.component';\r\nimport { IniciarJogoMemoriaComponent } from '../iniciar-jogo-memoria/iniciar-jogo-memoria.component';\r\nimport { AuthService } from 'src/app/Servicos/auth/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JogosService } from 'src/app/Servicos/jogos/jogos.service';\r\nimport { Jogo } from 'src/app/Models/Jogo';\r\nimport { VisualizacaoJogoMemoriaComponent } from '../visualizacao-jogo-memoria/visualizacao-jogo-memoria.component';\r\nimport { CartaService } from 'src/app/Servicos/carta/carta.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-jogo-memoria',\r\n  templateUrl: './jogo-memoria.component.html',\r\n  styleUrls: ['./jogo-memoria.component.css'],\r\n  providers: [DialogService]\r\n})\r\nexport class JogoMemoriaComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogService: DialogService,\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private arouter: ActivatedRoute,\r\n    private jogoService: JogosService,\r\n    private cartasService: CartaService\r\n  ){ }\r\n\r\n  debug_mode: boolean = false;\r\n  visualizando: boolean = false;\r\n\r\n  jogo_id: string = \"\";\r\n\r\n  refJanela: any = null;\r\n\r\n  cartas: Carta[] = [];\r\n  cartasSelecionadas: number[] = [];\r\n\r\n  jogo!: Jogo; \r\n\r\n  tempoMaximo: number = 260;\r\n\r\n  timerString: string = \"\";\r\n  timerSegundos: number = 0;\r\n\r\n  timerMostrarCartasInicio: number = 5;\r\n  \r\n  inicioJogo: boolean = false;\r\n  fimDeJogo: boolean = false;\r\n  \r\n  userReady = false;\r\n  jogador = {\r\n    id: 0,\r\n    nome: \"\",\r\n    tentativas: 0,\r\n    tempo: 0\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.arouter.queryParamMap\r\n    .subscribe((params) => {\r\n      this.jogo_id = String(params.get(\"id\"));\r\n      const id_visualizar = String(params.get(\"list\"));\r\n      this.jogoService.getJogo(this.jogo_id).subscribe((jogo: any) =>{\r\n        if(jogo){\r\n          this.tempoMaximo = jogo.tempo_max;\r\n          this.timerSegundos = this.tempoMaximo;\r\n          this.jogo = new Jogo(\r\n            jogo.title,\r\n            jogo.tempo_inicio,\r\n            jogo.tempo_max,\r\n            jogo.quantidade_tentativas,\r\n            jogo.prioridade_tempo,\r\n            jogo.mostrar_cartas_antes,\r\n            jogo.cartas_seleciodadas,\r\n            jogo.quantidade_cartas\r\n          );\r\n          this.jogo.setJogadores(jogo.jogadores);\r\n          this.inicializarCartas();\r\n          if(id_visualizar == jogo.id_visualizar){\r\n            this.visualizando = true;\r\n            this.mostrarVisualizacao();\r\n          }else{\r\n            this.mostrarIniciar();\r\n          }\r\n        }else{\r\n          console.error(\"Jogo não encontrado\");\r\n          // this.router.navigate(['/']);\r\n          // if(this.refJanela){\r\n          //   this.refJanela.close();\r\n          // }\r\n        }\r\n      })\r\n    }\r\n  );\r\n  let time = timer(200, 1000).subscribe(() =>{\r\n    if(this.authService.userData != undefined){\r\n      this.userReady = true;\r\n      time.unsubscribe();\r\n    }\r\n  });\r\n  let time2 = timer(200, 1000).subscribe(() =>{\r\n    if(this.userReady){\r\n      this.jogador = {\r\n        id: this.authService.userData.uid,\r\n        nome: this.authService.userData.displayName,\r\n        tentativas: 0,\r\n        tempo: 0\r\n      }\r\n      this.jogoService.jogadorExiste(this.jogo_id, this.jogador.id).subscribe((existe: any) =>{\r\n        if(existe && !this.visualizando){\r\n          if(this.refJanela){\r\n            this.refJanela.close();\r\n          }\r\n          alert(\"Você já participou deste jogo!\");\r\n          this.router.navigate(['']);\r\n        }\r\n      });\r\n      time2.unsubscribe();\r\n    }\r\n  });\r\n\r\n    this.timerSegundos = this.tempoMaximo;\r\n  }\r\n\r\n  private inicializarCartas(){\r\n    console.log(this.jogo.getCartasSelecionada());\r\n    if(this.jogo.getCartasSelecionada().length != 0){\r\n      for(let i = 0; i < this.jogo.getCartasSelecionada().length; i++){\r\n        this.cartas = this.cartas.concat(this.cartasService.getCartaPair(this.jogo.getCartasSelecionada()[i]));\r\n      }\r\n      if(this.cartas.length != this.jogo.getQuantidadeCartas()){\r\n        const quantidade_restante = this.jogo.getQuantidadeCartas() - this.cartas.length;\r\n        for (let index = 0; index < quantidade_restante/2; index++) {\r\n          do{\r\n            let cartas = this.cartasService.getRandomCartaPair();\r\n            let valido = true;\r\n            this.cartas.forEach((carta) => {\r\n              if(carta.id == cartas[0].id){\r\n                valido = false;\r\n              }\r\n            });\r\n            if(valido){\r\n              this.cartas = this.cartas.concat(cartas);\r\n              break;\r\n            }\r\n          }while(true);\r\n        }\r\n      }\r\n    }else{\r\n      for (let index = 0; index < this.jogo.getQuantidadeCartas()/2; index++) {\r\n        do{\r\n          let cartas = this.cartasService.getRandomCartaPair();\r\n          let valido = true;\r\n          this.cartas.forEach((carta) => {\r\n            if(carta.id == cartas[0].id){\r\n              valido = false;\r\n            }\r\n          });\r\n          if(valido){\r\n            this.cartas = this.cartas.concat(cartas);\r\n            break;\r\n          }\r\n        }while(true);\r\n      }\r\n    }\r\n\r\n    this.cartas = this.shuffle(this.cartas);\r\n  }\r\n\r\n  private mostrarCartas(tempo: number){\r\n    this.timerSegundos = tempo;\r\n    this.virarCartas(\"cima\");\r\n    this.executarCronometroExibirCartas();\r\n  }\r\n\r\n  private virarCartas(lado: string){\r\n    switch (lado) {\r\n      case \"cima\":\r\n        for (let i = 0; i < this.cartas.length; i++) {\r\n          this.cartas[i].isSelecionada = true;\r\n        }\r\n        break;\r\n      case \"baixo\":\r\n        for (let i = 0; i < this.cartas.length; i++) {\r\n          this.cartas[i].isSelecionada = false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  public selecionarCarta(carta: Carta){\r\n    if (this.cartasSelecionadas.length<2 && this.cartasSelecionadas.indexOf(this.cartas.indexOf(carta)) == -1) {\r\n      this.cartasSelecionadas.push(this.cartas.indexOf(carta));\r\n      carta.isSelecionada = true;\r\n      if (this.cartasSelecionadas.length == 2) {\r\n        if (this.checarPar()) {\r\n          this.cartas[this.cartasSelecionadas[0]].isCorreto = true;\r\n          this.cartas[this.cartasSelecionadas[1]].isCorreto = true;\r\n          this.resertarCartasSelecionadas();\r\n          if (this.checarFimDeJogo()) {\r\n            this.fimDeJogo = true;\r\n            this.jogador.tempo = this.tempoMaximo - this.timerSegundos;\r\n            this.mostraResultado();\r\n          }\r\n        }else{\r\n          let time = timer(1000, 1000).subscribe(() =>{\r\n            this.desSelecionarCartas();\r\n            this.resertarCartasSelecionadas();\r\n            time.unsubscribe();\r\n          });\r\n        }\r\n        this.jogador.tentativas++;\r\n        if(this.debug_mode){\r\n          this.fimDeJogo = true;\r\n          this.jogador.tempo = this.tempoMaximo - this.timerSegundos;\r\n          this.mostraResultado();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private checarFimDeJogo(){\r\n    let fimDeJogo = true;\r\n    for (let i = 0; i < this.cartas.length; i++) {\r\n      if (!this.cartas[i].isCorreto) {\r\n        fimDeJogo = false;\r\n      }\r\n    }\r\n    return fimDeJogo;\r\n  }\r\n\r\n  private checarPar(){\r\n    if (this.cartas[this.cartasSelecionadas[0]].id == this.cartas[this.cartasSelecionadas[1]].id) {\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private desSelecionarCartas(){\r\n    this.cartas[this.cartasSelecionadas[0]].isSelecionada = false;\r\n    this.cartas[this.cartasSelecionadas[1]].isSelecionada = false;\r\n  }\r\n\r\n  private resertarCartasSelecionadas(){\r\n    this.cartasSelecionadas.splice(0,2);\r\n  }\r\n\r\n  private shuffle(array: any[]) {\r\n    var currentIndex = array.length,  randomIndex;\r\n  \r\n    while (0 !== currentIndex) {\r\n  \r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n  }\r\n  \r\n  private executarCronometro(){\r\n\r\n    let timerCronometro = timer(1000,1000).subscribe(() => {\r\n      if (this.fimDeJogo) {\r\n        timerCronometro.unsubscribe();\r\n        return;\r\n      }\r\n\r\n      if (this.inicioJogo) {\r\n        this.timerSegundos--;\r\n      }\r\n      \r\n\r\n      this.timerString = this.formatarTempo(this.timerSegundos);\r\n\r\n      if(this.timerSegundos == 0){\r\n        this.fimDeJogo = true;\r\n        this.jogador.tempo = this.tempoMaximo;\r\n        this.mostraResultado();\r\n      }\r\n    });\r\n  }\r\n\r\n  private executarCronometroExibirCartas(){\r\n    let timerCronometro = timer(1000,1000).subscribe(() => {\r\n      if (this.fimDeJogo) {\r\n        timerCronometro.unsubscribe();\r\n        return;\r\n      }\r\n\r\n      if (this.inicioJogo) {\r\n        this.timerSegundos--;\r\n      }\r\n      \r\n\r\n      this.timerString = this.formatarTempo(this.timerSegundos);\r\n\r\n      if(this.timerSegundos == 0){\r\n        this.tempoMaximo = this.jogo.getTempoMax();\r\n        this.timerSegundos = this.tempoMaximo;\r\n        this.inicioJogo = true;\r\n        timerCronometro.unsubscribe();\r\n        this.executarCronometro();\r\n        this.virarCartas(\"baixo\");\r\n      }\r\n    });\r\n  }\r\n\r\n  private formatarTempo(tempo: number){\r\n    let tempoFormatado = \"\";\r\n    let minutos = Math.floor(tempo /60);\r\n    let segundos = (tempo - Math.floor(tempo /60)*60);\r\n    if(minutos < 10) tempoFormatado += \"0\"+minutos;\r\n    else tempoFormatado += minutos;\r\n    tempoFormatado += \":\";\r\n    if(segundos < 10) tempoFormatado += \"0\"+segundos;\r\n    else  tempoFormatado += segundos;\r\n\r\n    return tempoFormatado;\r\n  }\r\n  \r\n  private mostraResultado() {\r\n    const ref = this.dialogService.open(FimJogoMemoriaComponent, {\r\n      header: '',\r\n      width: '70%',\r\n      closable: false,\r\n      data: {\r\n        jogador: this.jogador,\r\n        jogo_id: this.jogo_id,\r\n        jogo: this.jogo\r\n      },\r\n    });\r\n    this.refJanela = ref;\r\n  }\r\n  private mostrarIniciar() {\r\n    const ref = this.dialogService.open(IniciarJogoMemoriaComponent, {\r\n      header: '',\r\n      data: {\r\n        jogo: this.jogo\r\n      }\r\n    });\r\n    this.refJanela = ref;\r\n\r\n    ref.onClose.subscribe(() =>{\r\n      if(this.jogo.getMostrarCartasAntes()){\r\n        this.mostrarCartas(this.timerMostrarCartasInicio);\r\n        this.inicioJogo = true;\r\n      }else{\r\n        this.inicioJogo = true;\r\n        this.executarCronometro();\r\n      }\r\n    })\r\n  }\r\n\r\n  private mostrarVisualizacao(){\r\n    const ref = this.dialogService.open(VisualizacaoJogoMemoriaComponent, {\r\n      header: '',\r\n      width: '50%',\r\n      data: {\r\n        jogo: this.jogo\r\n      }\r\n    });\r\n    this.refJanela = ref;\r\n\r\n    ref.onClose.subscribe(() =>{\r\n      this.router.navigate(['']);\r\n    });\r\n  }\r\n}\r\n","<app-menu></app-menu>\r\n<div class=\"wrapper\" >\r\n    <!-- <div class=\"p-grid p-ai-stretch vertical-container\">\r\n        <div class=\"p-col-3\" *ngFor=\"let carta of cartas; let i = index\">\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-12\">\r\n                    <div class=\"box box-stretched carta-texto\" *ngIf=\"carta.tipo == 'texto' && carta.isSelecionada\">{{carta.conteudo}}</div>\r\n                    <div class=\"box box-stretched carta-imagem\" *ngIf=\"carta.tipo == 'imagem' && carta.isSelecionada\"><img [src]=\"carta.conteudo\" class=\"imagem-carta\"></div>\r\n                    <div class=\"box box-stretched carta-virada\" *ngIf=\"!carta.isSelecionada\" (click)=\"selecionarCarta(carta)\">Jogo Memoria</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"cartas-container\">\r\n        <div class=\"carta\" *ngFor=\"let carta of cartas; let i = index\">\r\n            <div class=\"box box-stretched carta-texto\" *ngIf=\"carta.tipo == 'texto' && carta.isSelecionada\">{{carta.conteudo}}</div>\r\n            <div class=\"box box-stretched carta-imagem\" *ngIf=\"carta.tipo == 'imagem' && carta.isSelecionada\"><img [src]=\"carta.conteudo\" class=\"imagem-carta\"> </div>\r\n            <div class=\"box box-stretched carta-virada\" *ngIf=\"!carta.isSelecionada\" (click)=\"selecionarCarta(carta)\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"p-grid p-ai-stretch cronometro-container\">\r\n        <div class=\"p-col-12\">\r\n            <div class=\"cronometro box-stretched\">\r\n                {{timerString}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-rodape></app-rodape>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { Jogador } from 'src/app/Models/Jogador';\r\nimport { Jogo } from 'src/app/Models/Jogo';\r\nimport { JogosService } from 'src/app/Servicos/jogos/jogos.service';\r\n\r\n@Component({\r\n  selector: 'app-fim-jogo-memoria',\r\n  templateUrl: './fim-jogo-memoria.component.html',\r\n  styleUrls: ['./fim-jogo-memoria.component.css']\r\n})\r\nexport class FimJogoMemoriaComponent implements OnInit {\r\n\r\n  constructor(\r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig,\r\n    private router: Router,\r\n    private jogoService: JogosService\r\n    ) { }\r\n\r\n  jogador!: Jogador;\r\n  jogo_id: string = \"\";\r\n  jogo!: Jogo;\r\n\r\n  ngOnInit(): void {\r\n    const jogador_id = this.config.data.jogador.id;\r\n    const jogador_nome = this.config.data.jogador.nome;\r\n    const jogador_tentativas = this.config.data.jogador.tentativas;\r\n    const jogador_tempo = this.config.data.jogador.tempo;\r\n    this.jogador = new Jogador(jogador_id, jogador_nome, jogador_tentativas, jogador_tempo);\r\n\r\n    this.jogo_id = this.config.data.jogo_id;\r\n    this.jogo = this.config.data.jogo;\r\n    this.persistirDados();\r\n  }\r\n\r\n  private persistirDados(){\r\n    this.jogoService.adicionarJogador(this.jogo_id, this.jogador).subscribe((resposta: any) => {\r\n      if(resposta != \"adicionado\"){\r\n        alert(\"Erro ao adicionar jogador\");\r\n      }\r\n    });\r\n  }\r\n\r\n  public concluir(){\r\n    this.router.navigate(['']);\r\n    this.ref.close();\r\n  }\r\n\r\n  public formatarTempo(tempo: number){\r\n    let tempoFormatado = \"\";\r\n    let minutos = Math.floor(tempo /60);\r\n    let segundos = (tempo - Math.floor(tempo /60)*60);\r\n    if(minutos < 10) tempoFormatado += \"0\"+minutos;\r\n    else tempoFormatado += minutos;\r\n    tempoFormatado += \":\";\r\n    if(segundos < 10) tempoFormatado += \"0\"+segundos;\r\n    else  tempoFormatado += segundos;\r\n\r\n    return tempoFormatado;\r\n  }\r\n\r\n  public getPontuacao(){\r\n    return this.jogo.getPontuacao(this.jogador.getTempo(), this.jogador.getTentativas());\r\n  }  \r\n}\r\n","<div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <h1 style=\"text-align: center;\">\r\n            Parabéns\r\n        </h1>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            Aqui estão as informações sobre o seu desempenho:\r\n        </h2>    \r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            <b>\r\n                Você concluiu em: <span class=\"destaque\">{{formatarTempo(jogador.getTempo())}}</span> minutos.\r\n            </b>\r\n        </h2>    \r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            <b>\r\n                Você utilizou <span class=\"destaque\">{{jogador.getTentativas()}}</span> tentativas.\r\n            </b>\r\n        </h2>    \r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <h2 style=\"text-align: center;\">\r\n            <b>\r\n                Sua pontuação foi de <span class=\"destaque\">{{getPontuacao()}}/10</span>.\r\n            </b>\r\n        </h2>    \r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <button pButton type=\"button\" (click)=\"concluir()\" [style]=\"{'width': '100%'}\" label=\"Concluir\" ></button>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}